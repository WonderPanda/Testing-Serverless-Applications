{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workflowName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "[resourceGroup().location]",
        "australiaeast",
        "australiasoutheast",
        "brazilsouth",
        "centralus",
        "eastasia",
        "eastus",
        "eastus2",
        "japaneast",
        "japanwest",
        "northcentralus",
        "northeurope",
        "southcentralus",
        "southeastasia",
        "westeurope",
        "westus"
      ],
      "metadata": {
        "description": "Location of the Logic App."
      }
    },
    "functionAppBaseUri": {
      "type": "string",
      "metadata": {
        "description": "Base URI of Azure Functions for mocking"
      }
    },
    "functionAppKey": {
      "type": "string",
      "metadata": {
        "description": "API key of Azure Functions for mocking"
      }
    }
  },
  "variables": {},
  "resources": [
    {
      "name": "[concat(parameters('workflowName'), '-deleted-success')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "[concat(parameters('workflowName'), '-deleted-success')]"
      },
      "apiVersion": "2016-06-01",
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "triggers": {
            "manual": {
              "inputs": {
                "schema": {}
              },
              "kind": "Http",
              "type": "Request"
            }
          },
          "actions": {
            "SendEmailWithOptionsMock": {
              "runAfter": {},
              "type": "Http",
              "inputs": {
                "method": "GET",
                "uri": "[concat(parameters('functionAppBaseUri'), 'send-email-with-options-of-delete')]",
                "headers": {
                  "x-functions-key": "[parameters('functionAppKey')]"
                }
              }
            },
            "Condition": {
              "runAfter": {
                "SendEmailWithOptionsMock": [
                  "Succeeded"
                ]
              },
              "type": "If",
              "expression": "@equals(body('SendEmailWithOptionsMock'), 'Delete')",
              "actions": {
                "DeleteFileMock": {
                  "runAfter": {},
                  "type": "Http",
                  "inputs": {
                    "method": "GET",
                    "uri": "[concat(parameters('functionAppBaseUri'), 'delete-file-success')]",
                    "headers": {
                      "x-functions-key": "[parameters('functionAppKey')]"
                    }
                  }
                },
                "OnDeletionSuccess": {
                  "runAfter": {
                    "DeleteFileMock": [
                      "Succeeded"
                    ]
                  },
                  "type": "Compose",
                  "inputs": "File Deleted"
                },
                "OnDeletionFail": {
                  "runAfter": {
                    "DeleteFileMock": [
                      "Failed"
                    ]
                  },
                  "type": "Compose",
                  "inputs": "@body('DeleteFileMock')"
                },
                "MockResponseOnDeletionSuccess": {
                  "runAfter": {
                    "OnDeletionSuccess": [
                      "Succeeded"
                    ]
                  },
                  "type": "Response",
                  "inputs": {
                    "body": "@outputs('OnDeletionSuccess')",
                    "statusCode": "@outputs('DeleteFileMock')['statusCode']"
                  }
                },
                "MockResponseOnDeletionFail": {
                  "runAfter": {
                    "OnDeletionFail": [
                      "Succeeded"
                    ]
                  },
                  "type": "Response",
                  "inputs": {
                    "body": "@outputs('OnDeletionFail')",
                    "statusCode": "@outputs('DeleteFileMock')['statusCode']"
                  }
                }
              },
              "else": {
                "actions": {
                  "OnDoNothing": {
                    "runAfter": {},
                    "type": "Compose",
                    "inputs": "@body('SendEmailWithOptionsMock')"
                  },
                  "MockResponseOnDoNothing": {
                    "runAfter": {
                      "OnDoNothing": [
                        "Succeeded"
                      ]
                    },
                    "type": "Response",
                    "inputs": {
                      "body": "@outputs('OnDoNothing')",
                      "statusCode": 200
                    }
                  }
                }
              }
            }
          },
          "outputs": {}
        },
        "parameters": {}
      }
    },
    {
      "name": "[concat(parameters('workflowName'), '-deleted-fail')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "[concat(parameters('workflowName'), '-deleted-fail')]"
      },
      "apiVersion": "2016-06-01",
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "triggers": {
            "manual": {
              "inputs": {
                "schema": {}
              },
              "kind": "Http",
              "type": "Request"
            }
          },
          "actions": {
            "SendEmailWithOptionsMock": {
              "runAfter": {},
              "type": "Http",
              "inputs": {
                "method": "GET",
                "uri": "[concat(parameters('functionAppBaseUri'), 'send-email-with-options-of-delete')]",
                "headers": {
                  "x-functions-key": "[parameters('functionAppKey')]"
                }
              }
            },
            "Condition": {
              "runAfter": {
                "SendEmailWithOptionsMock": [
                  "Succeeded"
                ]
              },
              "type": "If",
              "expression": "@equals(body('SendEmailWithOptionsMock'), 'Delete')",
              "actions": {
                "DeleteFileMock": {
                  "runAfter": {},
                  "type": "Http",
                  "inputs": {
                    "method": "GET",
                    "uri": "[concat(parameters('functionAppBaseUri'), 'delete-file-fail')]",
                    "headers": {
                      "x-functions-key": "[parameters('functionAppKey')]"
                    }
                  }
                },
                "OnDeletionSuccess": {
                  "runAfter": {
                    "DeleteFileMock": [
                      "Succeeded"
                    ]
                  },
                  "type": "Compose",
                  "inputs": "File Deleted"
                },
                "OnDeletionFail": {
                  "runAfter": {
                    "DeleteFileMock": [
                      "Failed"
                    ]
                  },
                  "type": "Compose",
                  "inputs": "@body('DeleteFileMock')"
                },
                "MockResponseOnDeletionSuccess": {
                  "runAfter": {
                    "OnDeletionSuccess": [
                      "Succeeded"
                    ]
                  },
                  "type": "Response",
                  "inputs": {
                    "body": "@outputs('OnDeletionSuccess')",
                    "statusCode": "@outputs('DeleteFileMock')['statusCode']"
                  }
                },
                "MockResponseOnDeletionFail": {
                  "runAfter": {
                    "OnDeletionFail": [
                      "Succeeded"
                    ]
                  },
                  "type": "Response",
                  "inputs": {
                    "body": "@outputs('OnDeletionFail')",
                    "statusCode": "@outputs('DeleteFileMock')['statusCode']"
                  }
                }
              },
              "else": {
                "actions": {
                  "OnDoNothing": {
                    "runAfter": {},
                    "type": "Compose",
                    "inputs": "@body('SendEmailWithOptionsMock')"
                  },
                  "MockResponseOnDoNothing": {
                    "runAfter": {
                      "OnDoNothing": [
                        "Succeeded"
                      ]
                    },
                    "type": "Response",
                    "inputs": {
                      "body": "@outputs('OnDoNothing')",
                      "statusCode": 200
                    }
                  }
                }
              }
            }
          },
          "outputs": {}
        },
        "parameters": {}
      }
    },
    {
      "name": "[concat(parameters('workflowName'), '-do-nothing')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "[concat(parameters('workflowName'), '-do-nothing')]"
      },
      "apiVersion": "2016-06-01",
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "triggers": {
            "manual": {
              "inputs": {
                "schema": {}
              },
              "kind": "Http",
              "type": "Request"
            }
          },
          "actions": {
            "SendEmailWithOptionsMock": {
              "runAfter": {},
              "type": "Http",
              "inputs": {
                "method": "GET",
                "uri": "[concat(parameters('functionAppBaseUri'), 'send-email-with-options-of-leave-it')]",
                "headers": {
                  "x-functions-key": "[parameters('functionAppKey')]"
                }
              }
            },
            "Condition": {
              "runAfter": {
                "SendEmailWithOptionsMock": [
                  "Succeeded"
                ]
              },
              "type": "If",
              "expression": "@equals(body('SendEmailWithOptionsMock'), 'Delete')",
              "actions": {
                "DeleteFileMock": {
                  "runAfter": {},
                  "type": "Http",
                  "inputs": {
                    "method": "GET",
                    "uri": "[concat(parameters('functionAppBaseUri'), 'delete-file-success')]",
                    "headers": {
                      "x-functions-key": "[parameters('functionAppKey')]"
                    }
                  }
                },
                "OnDeletionSuccess": {
                  "runAfter": {
                    "DeleteFileMock": [
                      "Succeeded"
                    ]
                  },
                  "type": "Compose",
                  "inputs": "File Deleted"
                },
                "OnDeletionFail": {
                  "runAfter": {
                    "DeleteFileMock": [
                      "Failed"
                    ]
                  },
                  "type": "Compose",
                  "inputs": "@body('DeleteFileMock')"
                },
                "MockResponseOnDeletionSuccess": {
                  "runAfter": {
                    "OnDeletionSuccess": [
                      "Succeeded"
                    ]
                  },
                  "type": "Response",
                  "inputs": {
                    "body": "@outputs('OnDeletionSuccess')",
                    "statusCode": "@outputs('DeleteFileMock')['statusCode']"
                  }
                },
                "MockResponseOnDeletionFail": {
                  "runAfter": {
                    "OnDeletionFail": [
                      "Succeeded"
                    ]
                  },
                  "type": "Response",
                  "inputs": {
                    "body": "@outputs('OnDeletionFail')",
                    "statusCode": "@outputs('DeleteFileMock')['statusCode']"
                  }
                }
              },
              "else": {
                "actions": {
                  "OnDoNothing": {
                    "runAfter": {},
                    "type": "Compose",
                    "inputs": "@body('SendEmailWithOptionsMock')"
                  },
                  "MockResponseOnDoNothing": {
                    "runAfter": {
                      "OnDoNothing": [
                        "Succeeded"
                      ]
                    },
                    "type": "Response",
                    "inputs": {
                      "body": "@outputs('OnDoNothing')",
                      "statusCode": 200
                    }
                  }
                }
              }
            }
          },
          "outputs": {}
        },
        "parameters": {}
      }
    }
  ],
  "outputs": {}
}